[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "owl"
version = "0.0.1"
description = "Optimized Workforce Learning for General Multi-Agent Assistance in Real-World Task Automation"
authors = [{ name = "CAMEL-AI.org" }]
requires-python = ">=3.10,<3.14"
readme = "README.md"
license = "Apache-2.0"
keywords = [
    "optimized-workforce-learning",
    "multi-agent-assistance",
    "task-automation",
    "real-world-tasks",
    "artificial-intelligence",
    "agent-collaboration",
    "workforce-optimization",
    "learning-systems"
]
dependencies = [
    "camel-ai[owl]",,
    "docx2markdown>=0.2.10",  # Specify a compatible version
    "gradio>=3.50.2",
    "gradio-client>=0.10.0",
    "mcp-simple-arxiv==0.2.2",
    "mcp-server-fetch==2025.1.17",
    "xmltodict>=0.14.2",
    "firecrawl>=2.5.3",
    "mistralai>=1.7.0",
    "transformers",
    "torch",
    "Pillow",
    "huggingface-hub",
]

[project.urls]
Homepage = "https://www.camel-ai.org/"
Repository = "https://github.com/camel-ai/owl"
Documentation = "https://docs.camel-ai.org"

[tool.hatch.build.targets.wheel]
packages = ["owl"]

[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
strict_optional = false
ignore_missing_imports = true
allow_redefinition = true
disable_error_code = ["assignment", "arg-type", "return-value"]

[[tool.mypy.overrides]]
module = "camel.*"
ignore_missing_imports = true
follow_imports = "skip"

[[tool.mypy.overrides]]
module = "utils"
ignore_missing_imports = true

[tool.codespell]
# Ref: https://github.com/codespell-project/codespell#using-a-config-file
skip = '.git*,*.pdf,*.lock'
check-hidden = true
ignore-regex = '\bBrin\b'
ignore-words-list = 'datas'

ENV STREAMLIT_CONFIG_DIR="./.streamlit"

# Dockerfile
FROM python:3.11

# Set the working directory
WORKDIR /app

# Copy the requirements file
COPY requirements.txt .

# Install the dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy the application code
COPY . .

# Set the environment variable
ENV STREAMLIT_CONFIG_DIR="./.streamlit"

# Expose the port
EXPOSE 8501

# Run the Streamlit app
CMD streamlit run your_app.py
